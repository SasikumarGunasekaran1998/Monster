{"version":3,"sources":["components/search-box/search-box.component.jsx","components/card/card.component.jsx","components/card-list/card-list.component.jsx","App.js","logo.svg","reportWebVitals.js","index.js"],"names":["SearchBox","placeholder","handleChange","className","type","onChange","Card","props","monster","name","CardList","prop","Monsters","map","id","App","e","setState","searchField","target","value","state","demo","d","inp","bind","fetch","then","response","json","users","this","filterMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAGaA,EAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAcC,EAAhB,EAAgBA,aAAhB,OACrB,uBACKC,UAAY,SACZC,KAAK,SACJH,YAAaA,EACbI,SAEAH,KCRGI,G,MAAO,SAACC,GAAD,OAChB,qBAAKJ,UAAU,iBAAf,SACI,6BAAMI,EAAMC,QAAQC,WCDfC,G,MAAW,SAAAC,GAAI,OACxB,qBAAKR,UAAU,YAAf,SACKQ,EAAKC,SAASC,KACX,SAAAL,GAAO,OACH,cAAC,EAAD,CAAyBA,QAAWA,GAAvBA,EAAQM,WCyCtBC,GChDA,I,wDDQb,aAAc,IAAD,8BACX,gBAiBFb,aAAe,SAACc,GACd,EAAKC,SAAS,CAACC,YAAcF,EAAEG,OAAOC,SAjBtC,EAAKC,MAAO,CACVT,SAAS,GACTM,YAAY,GACZI,KAAO,CAAC,CAACC,EAAE,MACXC,IAAM,IAET,EAAKtB,aAAe,EAAKA,aAAauB,KAAlB,gBARR,E,qDAWb,WAAoB,IAAD,OAElBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKb,SAAS,CAACL,SAASkB,S,oBAOxC,WAEE,MAA+BC,KAAKV,MAA7BT,EAAP,EAAOA,SAASM,EAAhB,EAAgBA,YACVc,EAAiBpB,EAASqB,QAC9B,SAAAzB,GAAO,OAAIA,EAAQC,KAAKyB,cAAcC,SAASjB,EAAYgB,kBAE7D,OACA,sBAAK/B,UAAU,MAAf,UACE,cAAC,EAAD,CACAF,YAAc,iBACdC,aAAe6B,KAAK7B,eACpB,cAAC,EAAD,CAAUU,SAAYoB,IAJxB,W,GA/BcI,cEMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f8943a10.chunk.js","sourcesContent":["import React from 'react'\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({placeholder , handleChange}) =>(\r\n    <input \r\n         className = 'search'\r\n         type='search'\r\n          placeholder={placeholder}\r\n          onChange=\r\n         {\r\n          handleChange\r\n         } \r\n          />\r\n);\r\n","import React from 'react';\r\nimport './card.styles.css'\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n        <h1 >{props.monster.name}</h1>\r\n    </div>\r\n)","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\nimport './card-list.styles.css';\r\nexport const CardList = prop => (\r\n    <div className='card-list'>\r\n        {prop.Monsters.map(\r\n            monster => (\r\n                <Card key = {monster.id} monster = {monster} />\r\n            )\r\n        )}\r\n    </div>\r\n)\r\n","import {Component} from 'react';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport { CardList  } from './components/card-list/card-list.component';\nimport { DemoComp } from './components/demo/demo.component';\nimport logo from './logo.svg';\nimport './App.css';\nclass App extends Component\n{\n  constructor(){\n    super();\n    this.state ={\n      Monsters:[],\n      searchField:'',\n      demo : [{d:'1'}],\n      inp : ''\n    };\n   this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount(){\n\n   fetch('https://jsonplaceholder.typicode.com/users')\n   .then(response => response.json())\n   .then(users => this.setState({Monsters:users}))\n  };\n\n  handleChange = (e) =>{\n    this.setState({searchField : e.target.value\n  })\n}\n  render()\n  {\n    const {Monsters,searchField} = this.state;\n    const filterMonsters = Monsters.filter(\n      monster => monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return(\n    <div className=\"App\">\n      <SearchBox\n      placeholder = 'search Monster'\n      handleChange ={this.handleChange}/>\n      <CardList Monsters = {filterMonsters}/>>\n  </div>\n    );\n  }\n}\n\n\nexport default App;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}